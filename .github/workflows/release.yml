name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  CARGO_NET_GIT_FETCH_WITH_CLI: true

jobs:
  build:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Windows
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: smart-bangumi-qb-rule-generator-windows-x86_64
            extension: .exe
          - os: windows-latest
            target: i686-pc-windows-msvc
            artifact_name: smart-bangumi-qb-rule-generator-windows-i686
            extension: .exe

          # Linux
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: smart-bangumi-qb-rule-generator-linux-x86_64
            extension: ''
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: smart-bangumi-qb-rule-generator-linux-aarch64
            extension: ''

          # macOS
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: smart-bangumi-qb-rule-generator-macos-x86_64
            extension: ''
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: smart-bangumi-qb-rule-generator-macos-aarch64
            extension: ''

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Install cross-compilation dependencies
      run: |
        if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu
        fi

    - name: Build release binary
      run: |
        cargo build --release --target ${{ matrix.target }}

    - name: Strip binary (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: |
        strip target/${{ matrix.target }}/release/smart_bangumi_qb_rule_generator${{ matrix.extension }}

    - name: Package Python editor
      run: |
        # Copy Python editor files
        mkdir -p dist
        cp qb_rule_editor.py dist/
        cp run_editor.bat dist/
        cp run_editor.ps1 dist/
        cp EDITOR_README.md dist/

    - name: Create release archive
      run: |
        mkdir -p release-package

        # Copy binary
        cp target/${{ matrix.target }}/release/smart_bangumi_qb_rule_generator${{ matrix.extension }} release-package/

        # Copy Python editor files
        cp -r dist/* release-package/

        # Copy configuration templates
        cp tasks.json release-package/tasks.json.example
        cp README.md release-package/

        # Create archive
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          7z a ${{ matrix.artifact_name }}.zip release-package/*
        else
          tar czf ${{ matrix.artifact_name }}.tar.gz -C release-package .
        fi

    - name: Upload release artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: ${{ matrix.artifact_name }}.*

  create-release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Display structure of downloaded files
      run: ls -R

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          **/*.zip
          **/*.tar.gz
        generate_release_notes: true

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Run tests
      run: cargo test

    - name: Check code
      run: |
        cargo check
        cargo clippy -- -D warnings